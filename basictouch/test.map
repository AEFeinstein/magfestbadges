Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o (exit)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                              avr_print.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                              test.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
                              avr_print.o (__iob)

Allocating common symbols
Common symbol       size              file

touch               0x2               test.o
baseline            0x4               test.o
tr                  0x2               test.o
current             0x4               test.o
basezero            0x4               test.o
__iob               0x6               /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
LOAD test.o
LOAD avr_print.o
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x23e
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002a       0x16 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                0x000000000000002a                __do_copy_data
 .init4         0x0000000000000040       0x10 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000040                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000050        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 *(.init9)
 *(.text)
 .text          0x0000000000000054        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x0000000000000054                __vector_1
                0x0000000000000054                __vector_12
                0x0000000000000054                __bad_interrupt
                0x0000000000000054                __vector_6
                0x0000000000000054                __vector_11
                0x0000000000000054                __vector_13
                0x0000000000000054                __vector_7
                0x0000000000000054                __vector_5
                0x0000000000000054                __vector_4
                0x0000000000000054                __vector_9
                0x0000000000000054                __vector_8
                0x0000000000000054                __vector_14
                0x0000000000000054                __vector_10
 .text          0x0000000000000056      0x188 test.o
                0x0000000000000056                __vector_2
                0x0000000000000090                __vector_3
                0x00000000000000be                GoRun
                0x000000000000019a                main
 .text          0x00000000000001de       0x5c avr_print.o
                0x00000000000001de                sendchr
                0x00000000000001ee                sendhex1
                0x00000000000001fc                sendhex2
                0x0000000000000210                sendhex4
                0x0000000000000220                setup_spi
 .text          0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text          0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text          0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .text          0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
                0x000000000000023a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x000000000000023a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000023a        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                0x000000000000023a                exit
                0x000000000000023a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000023a        0x4 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000023e                _etext = .

.data           0x0000000000800060        0xe load address 0x000000000000023e
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .data          0x0000000000800060        0x0 test.o
 .data          0x0000000000800060        0xe avr_print.o
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080006e                . = ALIGN (0x2)
                0x000000000080006e                _edata = .
                0x000000000080006e                PROVIDE (__data_end, .)

.bss            0x000000000080006e       0x16
                0x000000000080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .bss           0x000000000080006e        0x0 test.o
 .bss           0x000000000080006e        0x0 avr_print.o
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080006e       0x10 test.o
                0x000000000080006e                touch
                0x0000000000800070                baseline
                0x0000000000800074                tr
                0x0000000000800076                current
                0x000000000080007a                basezero
 COMMON         0x000000000080007e        0x6 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
                0x000000000080007e                __iob
                0x0000000000800084                PROVIDE (__bss_end, .)
                0x000000000000023e                __data_load_start = LOADADDR (.data)
                0x000000000000024c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800084        0x0
                0x0000000000800084                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800084                PROVIDE (__noinit_end, .)
                0x0000000000800084                _end = .
                0x0000000000800084                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1380
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .stab          0x00000000000006cc      0x5a0 test.o
                                        0x5ac (size before relaxing)
 .stab          0x0000000000000c6c      0x450 avr_print.o
                                        0x618 (size before relaxing)
 .stab          0x00000000000010bc      0x2c4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(iob.o)
                                        0x30c (size before relaxing)

.stabstr        0x0000000000000000      0xf9a
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf9a /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test.elf elf32-avr)
LOAD linker stubs
